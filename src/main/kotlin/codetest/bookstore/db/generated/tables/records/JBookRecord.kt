/*
 * This file is generated by jOOQ.
 */
package codetest.bookstore.db.generated.tables.records


import codetest.bookstore.db.generated.tables.JBook

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class JBookRecord() : UpdatableRecordImpl<JBookRecord>(JBook.BOOK) {

    open var bookId: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var bookName: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised JBookRecord
     */
    constructor(bookId: Int? = null, bookName: String? = null) : this() {
        this.bookId = bookId
        this.bookName = bookName
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised JBookRecord
     */
    constructor(value: codetest.bookstore.db.generated.tables.pojos.JBook?) : this() {
        if (value != null) {
            this.bookId = value.bookId
            this.bookName = value.bookName
            resetChangedOnNotNull()
        }
    }
}
