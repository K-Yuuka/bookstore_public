/*
 * This file is generated by jOOQ.
 */
package codetest.bookstore.db.generated


import codetest.bookstore.db.generated.tables.JAuthor
import codetest.bookstore.db.generated.tables.JBook
import codetest.bookstore.db.generated.tables.JBookAuthor

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class JPublic : SchemaImpl("public", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>public</code>
         */
        val PUBLIC: JPublic = JPublic()
    }

    /**
     * The table <code>public.author</code>.
     */
    val AUTHOR: JAuthor get() = JAuthor.AUTHOR

    /**
     * The table <code>public.book</code>.
     */
    val BOOK: JBook get() = JBook.BOOK

    /**
     * The table <code>public.book_author</code>.
     */
    val BOOK_AUTHOR: JBookAuthor get() = JBookAuthor.BOOK_AUTHOR

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        JAuthor.AUTHOR,
        JBook.BOOK,
        JBookAuthor.BOOK_AUTHOR
    )
}
