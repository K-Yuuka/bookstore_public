openapi: 3.0.0
info:
  title: Sample API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9
servers:
  - url: "http://{host}:{port}" # ローカル開発用のサーバーURL
    variables:
      host:
        default: localhost
      port:
        enum:
          - '8080'
          - '8002'
        default: '8080'
tags:
  - name : book
  - name : author
paths:
  # 書籍リストの取得
  /book/list:
    get:
      tags:
        - book
      description: "登録されている書籍のリストを取得します"
      responses:
        '200':    # status code
          description: Success operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookList'
        '400':
          $ref: '#/components/responses/BadRequest'
        'default':
          $ref: '#/components/responses/InternalServerError'
  # 書籍の登録
  /book:
    post:
      tags:
        - book
      description: "書籍を登録します"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookRequest'
      responses:
        '201':    # status code
          description: Success operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          $ref: '#/components/responses/BadRequest'
        'default':
          $ref: '#/components/responses/InternalServerError'
  # 書籍の変更
  /book/{bookId}:
    put:
      tags:
        - book
      description: "書籍の情報を変更します"
      parameters:
        -  in: path
           name: bookId
           schema:
             type: integer
           required: true
           description: "書籍IDを指定します"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookRequest'
      responses:
        '201':    # status code
          description: Success operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        'default':
          $ref: '#/components/responses/InternalServerError'
  # 書籍の検索
  /book/{bookName}:
    get:
      tags:
        - book
      description: "名前を指定して書籍を検索します"
      parameters:
        -  in: path
           name: bookName
           schema:
             type: string
           required: true
           description: "書籍名を指定します"
      responses:
        '200':    # status code
          description: Success operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        'default':
          $ref: '#/components/responses/InternalServerError'

  # 著者リストの取得
  # 著者の登録
  # 著者の変更
  # 著者の検索（紐づく書籍を取得）

components:
  # レスポンス
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  #スキーマ定義
  schemas:
    BookList:
      type: array
      items :
        $ref: '#/components/schemas/BookAuthor'
    BookAuthor:
      type: object
      properties:
        book:
          $ref: '#/components/schemas/Book'
        author:
          $ref: '#/components/schemas/Author'
    Book:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    Author:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
    BookRequest:
      type: object
      properties:
        name:
          type: string
        author_name:
          type: string